on: [pull_request, push]

jobs:

  linux:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: |
        sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
        sudo wget https://apt.llvm.org/llvm.sh
        sudo chmod +x llvm.sh
        sudo ./llvm.sh 15 all
        sudo apt install g++ libgtest-dev ninja-build pkg-config cmake gcovr
        sudo ln -s $(which opt-15) /usr/local/bin/opt
    - run: cmake -G Ninja -S test -B builddirgcc/test -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER='Undefined' -DENABLE_TEST_COVERAGE=1
      env:
        CXX: g++
    - run: cmake --build builddirgcc/test -j4
    - run: cmake --build builddirgcc/test --target test
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
    - run: cmake -G Ninja -S test -B builddirclang/test -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER='Undefined' -DENABLE_TEST_COVERAGE=1
      env:
        CXX: clang++-15
    - run: cmake --build builddirclang/test -j4
    - run: cmake --build builddirclang/test --target test
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
    - uses: codecov/codecov-action@v3
      with:
        gcov: true
        gcov_include: include, lib
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: brew install gcc llvm@15 ninja pkg-config cmake gcovr
    - run: echo "/usr/local/opt/llvm/bin" >> $GITHUB_PATH
    - run: echo $(which clang++)
    - run: cmake -G Ninja -S test -B builddirclang/test -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER='Undefined' -DENABLE_TEST_COVERAGE=1 -DCMAKE_TOOLCHAIN_FILE=cmake/homebrew.cmake
      env:
        CXX: clang++
        LDFLAGS: "-L/usr/local/opt/llvm/lib/c++ -Wl,-rpath,/usr/local/opt/llvm/lib/c++ -L/usr/local/opt/llvm/lib"
        CPPFLAGS: "-I/usr/local/opt/llvm/include"
        CXXFLAGS: "-stdlib=libc++"
    - run: cmake --build builddirclang/test -j4
      env:
        CXX: clang++
        LDFLAGS: "-L/usr/local/opt/llvm/lib/c++ -Wl,-rpath,/usr/local/opt/llvm/lib/c++ -L/usr/local/opt/llvm/lib"
        CPPFLAGS: "-I/usr/local/opt/llvm/include"
        CXXFLAGS: "-stdlib=libc++"
    - run: cmake --build builddirclang/test --target test
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
    - run: cmake -G Ninja -S test -B builddirgcc/test -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER='Undefined' -DENABLE_TEST_COVERAGE=1 -DCMAKE_CXX_FLAGS="-stdlib=libstdc++ -fuse-ld=lld" -DCMAKE_TOOLCHAIN_FILE=cmake/homebrew.cmake
      env:
        CXX: g++-12
    - run: cmake --build builddirgcc/test -j4
    - run: cmake --build builddirgcc/test --target test
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
    - uses: codecov/codecov-action@v3
      with:
        gcov: true
        gcov_include: include, lib

