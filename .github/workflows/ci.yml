on: [pull_request, push]

jobs:

  linux:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install ninja gcovr
    - run: |
        sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
        sudo wget https://apt.llvm.org/llvm.sh
        sudo chmod +x llvm.sh
        sudo ./llvm.sh 15 all
        sudo apt install g++ libgtest-dev ninja-build pkg-config cmake
        sudo ln -s $(which opt-15) /usr/local/bin/opt
        # ln -s /usr/bin/llvm-config-15 ~/.local/bin/llvm-config
    - run: cmake -G Ninja -S test -B builddirgcc -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Address;Undefined -DENABLE_TEST_COVERAGE=1
      env:
        CXX: g++
    - run: cmake --build builddirgcc/test -j4
    - run: CTEST_OUTPUT_ON_FAILURE=1 cmake --build builddirgcc/test --target test
    - run: cmake -G Ninja -S test -B builddirclang -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Address;Undefined -DENABLE_TEST_COVERAGE=1
      env:
        CXX: clang++-15
    - run: cmake --build builddirclang/test -j4
    - run: CTEST_OUTPUT_ON_FAILURE=1 cmake --build builddirclang/test --target test
    - uses: codecov/codecov-action@v3
    # - run: ninja clang-format-check -C builddirclang
  macos:
    # env:

    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: brew install gcc llvm@15 ninja pkg-config cmake
    - run: pip install meson ninja gcovr
    - run: echo "/usr/local/opt/llvm/bin" >> $GITHUB_PATH
    - run: cmake -G Ninja -S test -B builddirgcc -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Address;Undefined -DENABLE_TEST_COVERAGE=1
      env:
        CXX: g++-12
        CXXFLAGS: "-stdlib=libstdc++"
    - run: cmake --build builddirgcc/test -j4
    - run: CTEST_OUTPUT_ON_FAILURE=1 cmake --build builddirgcc/test --target test
    - run: brew install googletest
    - run: echo $(which clang++)
    - run: cmake -G Ninja -S test -B builddirclang -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER=Address;Undefined -DENABLE_TEST_COVERAGE=1
      env:
        CXX: clang++
        LDFLAGS: "-L/usr/local/opt/llvm/lib/c++ -Wl,-rpath,/usr/local/opt/llvm/lib/c++ -L/usr/local/opt/llvm/lib"
        CPPFLAGS: "-I/usr/local/opt/llvm/include"
        CXXFLAGS: "-stdlib=libc++"
    - run: cmake --build builddirclang/test -j4
    - run: CTEST_OUTPUT_ON_FAILURE=1 cmake --build builddirclang/test --target test
    - uses: codecov/codecov-action@v3

  # https://discourse.llvm.org/t/no-llvm-config-exe-or-llvmconfig-cmake-in-pre-built-windows/57692
  # Windows doesn't provide llvm-config.exe
  # windows:
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - uses: actions/setup-python@v1
  #     with:
  #       python-version: '3.x'
  #   - run: pip install meson ninja
  #   - run: choco install llvm --force
  #   - run: llvm-config --libdir
  #   - run: meson setup builddir
  #     env:
  #       CXX: g++
  #   - run: meson test --print-errorlogs -C builddir/ -v
  #   - uses: actions/upload-artifact@v1
  #     if: failure()
  #     with:
  #       name: Windows_Meson_Testlog
  #       path: builddir/meson-logs/testlog.txt
