on: [pull_request, push]

jobs:

  linux:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - run: |
        sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
        sudo wget https://apt.llvm.org/llvm.sh
        sudo chmod +x llvm.sh
        sudo ./llvm.sh 16 all
        sudo apt install g++-12 libgtest-dev ninja-build pkg-config cmake gcovr
        sudo ln -s $(which opt-16) /usr/local/bin/opt
    - run: cmake -G Ninja -S test -B build/test -DUSE_SANITIZER='Undefined' -DENABLE_TEST_COVERAGE=1 -DCMAKE_BUILD_TYPE=Debug
      env:
        CXX: g++-12
    - run: cmake --build build/test
    - run: cmake --build build/test --target test
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
    - run: cmake -G Ninja -S test -B builddirclang/test -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_SANITIZER='Undefined' -DCMAKE_PREFIX_PATH=/usr/local
      env:
        CXX: clang++-16
    - run: cmake --build builddirclang/test
    - run: cmake --build builddirclang/test --target test
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
    - run: gcovr --exclude-throw-branches --exclude-unreachable-branches --gcov-ignore-parse-errors --xml=coverage.xml --json=coverage.json --txt=coverage.txt
    - uses: codecov/codecov-action@v3
      with:
        files: coverage.xml, coverage.json, coverage.txt
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - run: sudo xcode-select --switch /Library/Developer/CommandLineTools
    - run: echo $(pkgutil --pkg-info=com.apple.pkg.CLTools_Executables)
    - run: brew install llvm@16 ninja pkg-config cmake gcovr # gcc
    - run: echo "/usr/local/opt/llvm/bin" >> $GITHUB_PATH
    - run: echo $(which clang++)
    - run: cmake -G Ninja -S test -B build/test -DUSE_SANITIZER='Undefined' -DCMAKE_PREFIX_PATH=/usr/local  -DCMAKE_BUILD_TYPE=Debug
      env:
        CXX: clang++
        LDFLAGS: "-L/usr/local/opt/llvm/lib/c++ -Wl,-rpath,/usr/local/opt/llvm/lib/c++ -L/usr/local/opt/llvm/lib"
        CXXFLAGS: "-stdlib=libc++ -I/usr/local/opt/llvm/include/ -I/usr/local/include/ -I/usr/local/opt/llvm/include/c++/v1"
        C_INCLUDE_PATH: "-I/usr/local/opt/llvm/include/ -I/usr/local/include/ -I/usr/local/opt/llvm/include/c++/v1"
        CPLUS_INCLUDE_PATH: "-I/usr/local/opt/llvm/include/ -I/usr/local/include/ -I/usr/local/opt/llvm/include/c++/v1"
    - run: cmake --build build/test
    - run: cmake --build build/test --target test
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
    - run: echo $(pkgutil --pkg-info=com.apple.pkg.CLTools_Executables)
    # - run: cmake -G Ninja -S test -B builddirgcc/test -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER='Undefined' -DENABLE_TEST_COVERAGE=1 -DCMAKE_PREFIX_PATH=/usr/local
    #   env:
    #     CXX: g++-12
    #     LDFLAGS: "-L/usr/local/opt/gcc/lib/gcc/12 -Wl,-rpath,/usr/local/opt/gcc/lib/gcc/12 -L/usr/local/opt/llvm/lib"
    #     CXXFLAGS: "-stdlib=libstdc++ -I/usr/local/opt/llvm/include/ -I/usr/local/include/"
    #     C_INCLUDE_PATH: "-I/usr/local/opt/llvm/include/ -I/usr/local/include/"
    #     CPLUS_INCLUDE_PATH: "-I/usr/local/opt/llvm/include/ -I/usr/local/include/"
    # - run: cmake --build builddirgcc/test -j4
    # - run: cmake --build builddirgcc/test --target test
    #   env:
    #     CTEST_OUTPUT_ON_FAILURE: 1
    # - run: gcovr --exclude-throw-branches --exclude-unreachable-branches --xml=coverage.xml --json=coverage.json --txt=coverage.txt
    # - uses: codecov/codecov-action@v3
    #   with:
    #     files: coverage.xml, coverage.json, coverage.txt

